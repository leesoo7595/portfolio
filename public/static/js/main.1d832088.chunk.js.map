{"version":3,"sources":["component/component/Drawer.js","component/index/Index.js","component/component/PostCard.js","component/index/List.js","component/index/Post.js","component/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","menuBtn","color","link","textDecoration","Menu","side","classes","_useState","useState","left","_useState2","Object","slicedToArray","state","setState","toggleDrawer","open","event","type","key","objectSpread","defineProperty","react_default","a","createElement","IconButton","onClick","className","edge","aria-label","Menu_default","Drawer","onClose","role","onKeyDown","ListItem","button","component","Link","to","ListItemText","primary","Divider","List_List","map","text","index","concat","theme","root","flexGrow","Index","AppBar","position","Toolbar","variant","Drawer_Menu","Typography","card","margin","media","height","PostCard","props","title","image","description","createdAt","Card","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","Button","size","btn","right","List","post","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","sent","json","stop","apply","this","arguments","req","console","log","core","e","i","PostCard_PostCard","form","padding","container","Post","submit","changeInputForm","target","name","value","react_router","Container","FormControl","InputLabel","htmlFor","OutlinedInput","id","onChange","TextField","multiline","rows","rowsMax","preventDefault","body","JSON","stringify","then","res","s","alert","catch","App","react_router_dom","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","component_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d832088.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {\n    makeStyles,\n    Button,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    Divider,\n    IconButton\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// import {} from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    menuBtn: {\n        color: 'white',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n});\n\nexport const Menu = () => {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        left: false,\n    });\n\n    const toggleDrawer = (side, open) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({...state, [side]: open});\n    };\n\n    const sideList = side => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        >\n            <ListItem button key={'blog'} component={Link} to={'/'}>\n                <ListItemText primary={'Blog'}/>\n            </ListItem>\n            <Divider/>\n            <List>\n                {['list', 'post'].map((text, index) => (\n                    <ListItem button key={text} component={Link} to={`/${text}`}>\n                        {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\n                        <ListItemText primary={text}/>\n                    </ListItem>\n                ))}\n            </List>\n            <Divider/>\n            <List>\n                {['Profile', 'Portfolio'].map((text, index) => (\n                    <ListItem button key={text} component={Link} to={`/${text}`}>\n                        {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\n                        <ListItemText primary={text}/>\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton onClick={toggleDrawer('left', true)} className={classes.menuBtn} edge=\"start\" aria-label=\"Menu\">\n                <MenuIcon/>\n            </IconButton>\n            <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n                {sideList('left')}\n            </Drawer>\n        </div>\n    )\n};","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {AppBar, Toolbar, Typography, makeStyles} from '@material-ui/core';\n\nimport {Menu} from '../component/Drawer';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n}));\n\nexport const Index = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\" className={classes.link} component={Link} to={'/'}>\n                    <Menu />\n                    <Typography variant=\"h6\">\n                        Blog\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            이곳은 main 입니다.\n        </div>\n    )\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    card: {\n        width: '95%',\n        margin: '20px'\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport const PostCard = (props) => {\n    const {title, image, description, createdAt} = props;\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={`../img/${image}`}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {description}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Share\n                </Button>\n                <Button size=\"small\" color=\"primary\">\n                    Learn More\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {makeStyles, Button, Toolbar, Typography, AppBar} from \"@material-ui/core/index\";\nimport {Menu} from \"../component/Drawer\";\nimport {PostCard} from \"../component/PostCard\";\n\nconst useStyles = makeStyles({\n    btn: {\n        position: 'absolute',\n        right: 0,\n        margin: '10px',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n    }\n});\n\nexport const List = () => {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        post: []\n    });\n\n    useEffect(() => {\n        const req = async () => {\n            const result = await fetch('/api', {\n                method: 'GET',\n                headers: {\"Content-Type\": \"application/json\"}\n            });\n            const post = await result.json();\n            setState({post});\n        };\n        req();\n    }, []);\n\n    console.log(state);\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\" className={classes.link} component={Link} to={'/list'}>\n                    <Menu/>\n                    <Typography variant=\"h6\">\n                        List\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Button className={classes.btn} variant={'contained'} color={'primary'} component={Link}\n                    to={'/post'}>post</Button>\n            {state.post.map((e, i) => {\n                return <PostCard\n                    key={i}\n                    title={e.title}\n                    description={e.description}\n                    createdAt={e.createdAt}\n                    image={e.image}/>\n            })}\n        </div>\n    );\n};\n","import React, {useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {AppBar, Toolbar, Typography, TextField, FormControl, InputLabel, Button, Input, FormHelperText, OutlinedInput, Container} from \"@material-ui/core\";\nimport {Menu} from \"../component/Drawer\";\n\nconst useStyles = makeStyles({\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n    form: {\n        width: '100%',\n        padding: '15px 0'\n    },\n    container: {\n        padding: '30px'\n    }\n});\n\nexport const Post = () => {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        title: \"\",\n        image: null,\n        description: \"\",\n        submit: false,\n    });\n    const changeInputForm = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const submitInputForm = e => {\n        e.preventDefault();\n        const {title, description} = state;\n        console.log(\"title: \", title);\n        console.log(\"description: \", description);\n        fetch('/api', {\n            method: 'POST',\n            body: JSON.stringify({title, description}),\n            headers: {\"Content-Type\": \"application/json\"}\n        })\n            .then(res => res.json())\n            .then(s => console.log(s))\n            .then(() => {\n                alert(\"데이터베이스 저장 완료\");\n                setState({submit: true});\n            })\n            .catch(e => console.log(e));\n    };\n\n    return (\n        (state.submit)\n        ? <Redirect to={'/list'} />\n        : <div>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\" className={classes.link} component={Link} to={'/post'}>\n                    <Menu />\n                    <Typography variant=\"h6\">\n                        Post\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Container className={classes.container}>\n                <FormControl className={classes.form}>\n                    <InputLabel htmlFor=\"my-input\">Title</InputLabel>\n                    <OutlinedInput id=\"my-input\" onChange={changeInputForm} name=\"title\"/>\n                </FormControl>\n\n                <FormControl className={classes.form}>\n                    <TextField onChange={changeInputForm}\n                        variant=\"outlined\"\n                        name=\"description\"\n                        multiline={true}\n                        rows={100}\n                        rowsMax={25}\n                    />\n                </FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={submitInputForm}>Submit</Button>\n            </Container>\n        </div>\n    )\n};","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {Index} from './index/Index';\nimport {List} from './index/List';\nimport {Post} from './index/Post';\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Route exact path={'/'} component={Index}/>\n            <Route path={'/list'} component={List} />\n            <Route path={'/post'} component={Post}/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}